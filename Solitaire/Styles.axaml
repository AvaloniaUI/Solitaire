<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:Solitaire.Converters"
        xmlns:solitaireGames="clr-namespace:Solitaire.ViewModels"
        xmlns:controls="clr-namespace:Solitaire.Controls"
        xmlns:behaviors="clr-namespace:Solitaire.Behaviors">
    <Styles.Resources>
        <converters:TimeSpanToShortStringConverter x:Key="TimeSpanToShortStringConverter" />
        <converters:PlayingCardToBrushConverter x:Key="PlayingCardToBrushConverter" />
        <converters:EnumToListConverter x:Key="EnumToListConverter" />

        <DataTemplate x:Key="PlayingCardDataTemplate" DataType="{x:Type solitaireGames:PlayingCardViewModel}">
            <Border
                Background="White"
                Classes="playingCard"
                Classes.isFaceDown="{Binding IsFaceDown}"
                Width="140" Height="203.33" Cursor="Hand"
                BorderThickness="1" CornerRadius="6">
                <Image Margin="4">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource PlayingCardToBrushConverter}">
                            <Binding Path="CardType" />
                            <Binding Path="IsFaceDown" />
                        </MultiBinding>
                    </Image.Source>
                </Image>
                <!-- <Interaction.Behaviors> -->
                <!--     <BehaviorCollection> -->
                <!--         <behaviors:CardDragBehavior HorizontalDragThreshold="3" -->
                <!--                                     VerticalDragThreshold="3" /> -->
                <!--     </BehaviorCollection> -->
                <!-- </Interaction.Behaviors> -->
                <Border.Styles>
                    <Style Selector="Border.playingCard.isFaceDown">
                        <Setter Property="BorderBrush" Value="Transparent" />
                    </Style>
                    <Style Selector="Border.playingCard:not(.isFaceDown)">
                        <Setter Property="BorderBrush" Value="Gray" />
                    </Style>
                    <Style Selector="Border.playingCard:not(:dragging)">
                        <Setter Property="Transitions">
                            <Setter.Value>
                                <Transitions>
                                    <TransformOperationsTransition Property="RenderTransform"
                                                                   Duration="0:0:0.075" Easing="QuadraticEaseIn" />
                                </Transitions>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style Selector="Border.playingCard:dragging">
                        <Setter Property="Opacity" Value="0.5" />
                    </Style>
                </Border.Styles>
            </Border>
        </DataTemplate>
    </Styles.Resources>

    <StyleInclude Source="avares://Avalonia.Xaml.Interactions/Draggable/Styles.axaml" />
    <Style Selector="controls|CardStackControl">
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:CardStackControl}">
                    <Border Background="Yellow"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            ClipToBounds="False"
                            Width="140" Height="203.33"
                            BorderThickness="{TemplateBinding BorderThickness}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--The style for text etc in a game. -->
    <Style Selector="TextBlock.CasinoTextStyle">
        <Setter Property="Foreground" Value="#99FFFFFF" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <!-- The style for a stack marker. -->
    <Style Selector="Border.StackMarker">
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="6" />
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="BorderBrush" Value="#33FFFFFF" />
        <Setter Property="Margin" Value="8,10,40,60" />
    </Style>

    <!-- Style for a run marker. -->
    <Style Selector="Border.RunMarker">
        <Setter Property="Padding" Value="10" />
        <Setter Property="BorderThickness" Value="6" />
        <Setter Property="CornerRadius" Value="15" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0%,0%" EndPoint="0%,100%">
                    <GradientStop Color="#33FFFFFF" Offset="0" />
                    <GradientStop Color="#00FFFFFF" Offset="0.8" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="8,10,40,40" />
    </Style>

    <!-- A nice clean style for a button. -->
    <Style Selector="Button.CasinoButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Padding="4" BorderThickness="2" CornerRadius="15" BorderBrush="#66FFFFFF"
                        Background="#11FFFFFF"
                        Cursor="Hand">
                        <ContentPresenter
                            TextElement.Foreground="#99FFFFFF"
                            TextElement.FontWeight="SemiBold"
                            HorizontalAlignment="Center"
                            Content="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</Styles>